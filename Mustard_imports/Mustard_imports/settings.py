"""
Django settings for Mustard_imports project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from os import path, getenv
from pathlib import Path
from corsheaders.defaults import default_headers

from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

DEBUG = False  # Disable debug mode for production
ALLOWED_HOSTS = [os.getenv("DOMAIN"), "www." + os.getenv("DOMAIN"), "localhost", "127.0.0.1"]  # Add your domain, e.g., "example.com"
SECRET_KEY = os.getenv('SECRET_KEY')  # Already set to use .env
# Application definition



INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'ecommerce',
    'csp',
    'ecommerce.api.apps.CoreConfig',
    'corsheaders',
    'djoser',
    'django_filters',
]
# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}
# Djoser settings for token-based authentication
DJOSER = {
    'SEND_ACTIVATION_EMAIL': False,
    'TOKEN_MODEL': 'rest_framework.authtoken.models.Token',
    'SERIALIZERS': {
        'user_create': 'ecommerce.api.serializers.UserCreateSerializer',
        'user': 'ecommerce.api.serializers.UserSerializer',
    },
}


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    }
}



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]
FRONTEND_URL = 'http://localhost:5173'

CORS_ALLOW_ALL_ORIGINS = False  # For development only
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    f"https://{os.getenv('DOMAIN')}",
    f"https://www.{os.getenv('DOMAIN')}",
    "http://localhost:5173",  # Vue dev server (Vite)
    "https://mustardimports.co.ke",  # Django serving frontend
    "http://localhost:8000",  # Add this for consistency
]



CORS_ALLOW_HEADERS = list(default_headers) + [
    'authorization',
    'content-disposition',
    'x-requested-with',
    'cache-control',
    'pragma',
    'accept',
    'accept-encoding',
    'accept-language',
    'origin',
    'user-agent',
    'x-csrftoken',
]

SECURE_CROSS_ORIGIN_OPENER_POLICY = None


CONTENT_SECURITY_POLICY = {
    'DIRECTIVES': {
        'connect-src': [
            "'self'",
            'https://accounts.google.com',
            'https://play.google.com',
            'https://www.google-analytics.com',
            'http://localhost:8000',
            'https://mustardimports.co.ke',
        ],
        'frame-src': [
            "'self'",
            'https://accounts.google.com',
        ],
        'script-src': [
            "'self'",
            'https://accounts.google.com/gsi/client',
            'https://www.googletagmanager.com',
            "'unsafe-inline'",
        ],
        'style-src': [
            "'self'",
            'https://fonts.googleapis.com',
            'https://cdnjs.cloudflare.com',
            'https://accounts.google.com',
            "'unsafe-inline'",
        ],
        'font-src': [
            "'self'",
            'https://fonts.gstatic.com',
            'https://cdnjs.cloudflare.com',
        ],
        'img-src': [
            "'self'",
            'data:',
            'https://*.googleusercontent.com',
            'https://accounts.google.com',
        ],
        'default-src': ["'self'"],
    }
}

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT'
]

# Remove or minimize CSRF settings
CSRF_TRUSTED_ORIGINS = [
    f"https://{os.getenv('DOMAIN')}",
    f"https://www.{os.getenv('DOMAIN')}",
    "http://localhost:5173",
    "https://mustardimports.co.ke",
    "http://localhost:8000",
]
CSRF_COOKIE_HTTPONLY = False
SESSION_COOKIE_SECURE = True  # Set to True only in production with HTTPS
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_SECURE = True  # Set to True only in production with HTTPS
CSRF_COOKIE_SAMESITE = 'Lax'
SECURE_SSL_REDIRECT = True  # Redirect all HTTP requests to HTTPS


#HSTS Settings
SECURE_HSTS_SECONDS = 31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True  # Enable HSTS preload list submission

# URL configuration


ROOT_URLCONF = 'Mustard_imports.urls'
SITE_URL = 'https://mustardimports.co.ke/'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR.parent, 'frontend', 'vue-project', 'dist')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Mustard_imports.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
# Load environment variables from .env
# Database configuration using .env, inspired by your guide
#devconnection
DATABASES = {#
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres.ymeqfypcnminwscpbbrm',
        'PASSWORD': 'y5FHPhaeR39gK83zgaNt',
        'HOST': 'aws-0-eu-north-1.pooler.supabase.com',
        'PORT': '5432',
        'OPTIONS': {

        },
    }
}

# Production Database
#DATABASES = {
 #   'default': {
  #      'ENGINE': 'django.db.backends.mysql',
   #     'NAME': 'mustardi_imports_ecommerce',
    #    'USER': 'mustardi_imports_ecommerce',
     #   'PASSWORD': 'y5FHPhaeR39gK83zgaNt',
      #  'HOST': 'localhost',
       # 'PORT': '3306',
        #'OPTIONS': {
         #   'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
          #  'charset': 'utf8mb4',
           # 'collation': 'utf8mb4_bin',
  #      },
   # }
#}

AUTH_USER_MODEL = 'ecommerce.User'

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'

SECURE_REFERRER_POLICY = "same-origin"



MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'ecommerce' / 'media'

STATIC_URL = '/static/'

VUE_APP_DIR = BASE_DIR.parent / 'frontend' / 'vue-project' / 'dist'

if VUE_APP_DIR.exists():
    STATICFILES_DIRS = [VUE_APP_DIR]
    STATIC_ROOT = VUE_APP_DIR / 'staticfiles'
else:
    STATIC_ROOT = BASE_DIR / 'staticfiles'




# Token-based authentication specific
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_EMAIL_REQUIRED = False



import mimetypes
mimetypes.add_type("image/jpeg", ".jpg")
mimetypes.add_type("image/jpeg", ".jpeg")
mimetypes.add_type("image/png", ".png")
mimetypes.add_type("image/gif", ".gif")
mimetypes.add_type("image/webp", ".webp")
mimetypes.add_type("image/svg+xml", ".svg")


GOOGLE_CLIENT_ID = '974928309201-vd4rncer6j963b30bpi55o3h8rh4ab3a.apps.googleusercontent.com'


# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST', 'mail.mustardimports.co.ke')  # mail.mustardimports.co.ke
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')  # e.g., 'your-email@gmail.com'
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')  # App-specific password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        'ecommerce': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
        'ecommerce.api': { 
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
        'django': {
            'handlers': ['console', 'file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'corsheaders': {  # Add this
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


# settings.py
OXYLABS_USERNAME = 'mustardimports_SXOYJ'
OXYLABS_PASSWORD = 'Mustardoxy1+'